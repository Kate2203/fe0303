// Написать функцию возведения числа в степень
function pow(x, n) {

}

console.log( pow(2, 3) === 8 );
console.log( pow(3, 3) === 27 );
console.log( pow(10, 5) === 100000 );

/*
    Контекст выполнения – специальная внутренняя структура данных, которая содержит информацию о вызове функции.
        Она включает в себя конкретное место в коде, на котором находится интерпретатор,
        локальные переменные функции и прочую служебную информацию.

    - Один вызов функции имеет ровно один контекст выполнения, связанный с ним.
    - Когда функция производит вложенный вызов, происходит следующее:
        1. Выполнение текущей функции приостанавливается.
        2. Контекст выполнения, связанный с ней, запоминается в специальной структуре данных – стеке контекстов выполнения.
        3. Выполняются вложенные вызовы, для каждого из которых создаётся свой контекст выполнения.
        4. После их завершения старый контекст достаётся из стека,
            и выполнение внешней функции возобновляется с того места, где она была остановлена.
*/


// Написать функцию определения факториала числа
function factorial(n) {

}

console.log( factorial(0) === 1 );
console.log( factorial(1) === 1 );
console.log( factorial(2) === 2 );
console.log( factorial(3) === 6 );
console.log( factorial(4) === 24 );
console.log( factorial(5) === 1*2*3*4*5 );
